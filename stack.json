{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "d9574163-f843-4c56-9da7-b0a331ae9533": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -170,
                    "y": -20
                },
                "z": 1,
                "embeds": []
            },
            "04f99710-fcf2-491a-99f1-8141b62034b5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -60,
                    "y": 450
                },
                "z": 1,
                "embeds": []
            },
            "5b7c5726-e72a-4fa0-b533-8ba23f99223e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -170,
                    "y": 310
                },
                "z": 1,
                "embeds": []
            },
            "0f6cc081-6f50-4a4b-aebe-0f1ba64a9315": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -60,
                    "y": 200
                },
                "z": 1,
                "embeds": []
            },
            "7e0172fd-1e4b-456c-8906-cbbf2dac74b9": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -170,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "463f54ce-7c1f-4f62-8549-4678f6c9577d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -340,
                    "y": 90
                },
                "z": 1,
                "embeds": []
            },
            "cbcc69e9-41c1-4091-86a6-14080e1662da": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -170,
                    "y": 450
                },
                "z": 1,
                "embeds": []
            },
            "f979cb78-6287-438f-aae3-4e734e597b89": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -350,
                    "y": 450
                },
                "z": 1,
                "embeds": []
            },
            "ff575f32-e27d-4144-a98f-a1ad628111bd": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -350,
                    "y": 310
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "5b7c5726-e72a-4fa0-b533-8ba23f99223e"
                ]
            }
        }
    },
    "Parameters": {
        "S3BucketLambda": {
            "Type": "String",
            "AllowedPattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
            "Description": "The bucket the Lambda function code is stored in."
        },
        "S3KeyLambda": {
            "Type": "String",
            "AllowedPattern": ".*",
            "Description": "The object key the Lambda function code is stored at."
        },
        "S3BucketLambdaLayer": {
            "Type": "String",
            "AllowedPattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
            "Description": "The bucket the Lambda Layer is stored in."
        },
        "S3KeyLambdaLayer": {
            "Type": "String",
            "AllowedPattern": ".*",
            "Description": "The object key the Lambda Layer is stored at."
        }
    },
    "Resources": {
        "VideoCDNIdentity": {
            "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "Properties": {
                "CloudFrontOriginAccessIdentityConfig": {
                    "Comment": "Origin Access Identity for VideoCDN"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f979cb78-6287-438f-aae3-4e734e597b89"
                }
            }
        },
        "VideoCDN": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "DefaultCacheBehavior": {
                        "TargetOriginId": {
                            "Ref": "VideoHLSBucket"
                        },
                        "ViewerProtocolPolicy": "allow-all",
                        "AllowedMethods": [
                            "GET",
                            "HEAD",
                            "OPTIONS"
                        ],
                        "CachedMethods": [
                            "GET",
                            "HEAD",
                            "OPTIONS"
                        ],
                        "CachePolicyId": {
                            "Ref": "VideoCDNCachePolicy"
                        },
                        "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf"
                    },
                    "Origins": [{
                        "Id": {
                            "Ref": "VideoHLSBucket"
                        },
                        "DomainName": {
                            "Fn::GetAtt": [
                                "VideoHLSBucket",
                                "DomainName"
                            ]
                        },
                        "S3OriginConfig": {
                            "OriginAccessIdentity": {
                                "Fn::Sub": "origin-access-identity/cloudfront/${VideoCDNIdentity}"
                            }
                        }
                    }],
                    "Enabled": true
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "cbcc69e9-41c1-4091-86a6-14080e1662da"
                }
            }
        },
        "VideoBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "-",
                        [
                            "rawuploads",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "CorsConfiguration": {
                    "CorsRules": [{
                        "AllowedOrigins": [
                            "*"
                        ],
                        "AllowedMethods": [
                            "GET"
                        ],
                        "AllowedHeaders": [
                            "Authorization"
                        ],
                        "MaxAge": 3000
                    }]
                },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "BlockPublicPolicy": true,
                    "IgnorePublicAcls": true,
                    "RestrictPublicBuckets": true
                },
                "NotificationConfiguration": {
                    "LambdaConfigurations": [{
                        "Event": "s3:ObjectCreated:*",
                        "Filter": {
                            "S3Key": {
                                "Rules": [{
                                    "Name": "suffix",
                                    "Value": ".mp4"
                                }]
                            }
                        },
                        "Function": {
                            "Fn::GetAtt": [
                                "VideoTranscoder",
                                "Arn"
                            ]
                        }
                    }]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "463f54ce-7c1f-4f62-8549-4678f6c9577d"
                }
            }
        },
        "VideoHLSBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "CorsConfiguration": {
                    "CorsRules": [{
                        "AllowedOrigins": [
                            "*"
                        ],
                        "AllowedMethods": [
                            "GET"
                        ],
                        "AllowedHeaders": [
                            "Authorization"
                        ],
                        "MaxAge": 3000
                    }]
                },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "BlockPublicPolicy": true,
                    "IgnorePublicAcls": true,
                    "RestrictPublicBuckets": true
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5b7c5726-e72a-4fa0-b533-8ba23f99223e"
                }
            }
        },
        "VideoBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "VideoHLSBucket"
                },
                "PolicyDocument": {
                    "Version": "2008-10-17",
                    "Id": "PolicyForCloudFrontPrivateContent",
                    "Statement": [{
                        "Sid": "1",
                        "Effect": "Allow",
                        "Principal": {
                            "CanonicalUser": {
                                "Fn::GetAtt": [
                                    "VideoCDNIdentity",
                                    "S3CanonicalUserId"
                                ]
                            }
                        },
                        "Action": "s3:GetObject",
                        "Resource": {
                            "Fn::Join": [
                                "",
                                [{
                                        "Fn::GetAtt": [
                                            "VideoHLSBucket",
                                            "Arn"
                                        ]
                                    },
                                    "/*"
                                ]
                            ]
                        }
                    }]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ff575f32-e27d-4144-a98f-a1ad628111bd"
                }
            }
        },
        "VideoCDNCachePolicy": {
            "Type": "AWS::CloudFront::CachePolicy",
            "Properties": {
                "CachePolicyConfig": {
                    "DefaultTTL": 86400,
                    "MinTTL": 1,
                    "MaxTTL": 31536000,
                    "Name": {
                        "Fn::Join": [
                            "-",
                            [
                                "CacheCORS",
                                {
                                    "Ref": "AWS::StackName"
                                }
                            ]
                        ]
                    },
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "EnableAcceptEncodingGzip": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "Origin",
                                "Access-Control-Request-Method",
                                "Access-Control-Request-Headers"
                            ]
                        },
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        }
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "04f99710-fcf2-491a-99f1-8141b62034b5"
                }
            }
        },
        "VideoTranscoderLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
                "CompatibleRuntimes": [
                    "nodejs12.x"
                ],
                "Content": {
                    "S3Bucket": {
                        "Ref": "S3BucketLambdaLayer"
                    },
                    "S3Key": {
                        "Ref": "S3KeyLambdaLayer"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d9574163-f843-4c56-9da7-b0a331ae9533"
                }
            }
        },
        "VideoTranscoderExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }]
                },
                "Policies": [{
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "root",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "logs:*"
                                ],
                                "Resource": "arn:aws:logs:*:*:*"
                            }]
                        }
                    },
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "VideoBucketGet",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "s3:GetObject"
                                ],
                                "Resource": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::rawuploads-",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            }]
                        }
                    },
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "VideoBucketHLSPut",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "s3:PutObject"
                                ],
                                "Resource": {
                                    "Fn::Join": [
                                        "",
                                        [{
                                                "Fn::GetAtt": [
                                                    "VideoHLSBucket",
                                                    "Arn"
                                                ]
                                            },
                                            "/*"
                                        ]
                                    ]
                                }
                            }]
                        }
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0f6cc081-6f50-4a4b-aebe-0f1ba64a9315"
                }
            }
        },
        "VideoTranscoder": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "VideoTranscoderExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3BucketLambda"
                    },
                    "S3Key": {
                        "Ref": "S3KeyLambda"
                    }
                },
                "Layers": [{
                    "Ref": "VideoTranscoderLayer"
                }],
                "Environment": {
                    "Variables": {
                        "OUTPUT_BUCKET": {
                            "Ref": "VideoHLSBucket"
                        }
                    }
                },
                "MemorySize": 1028,
                "Timeout": 30,
                "Runtime": "nodejs12.x"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7e0172fd-1e4b-456c-8906-cbbf2dac74b9"
                }
            }
        },
        "VideoTranscoderPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "VideoTranscoder",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:s3:::rawuploads-",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                }
            }
        }
    }
}